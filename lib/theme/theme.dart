import 'package:flex_color_scheme/flex_color_scheme.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:signals/signals_flutter.dart';

Signal<bool> sIsDark = signal<bool>(false);

Signal<bool> sIsGreen = signal<bool>(true);

Computed<FlexScheme> cFlexScheme = computed(() {
  return sIsGreen.value ? FlexScheme.money : FlexScheme.espresso;
});

Computed<ThemeData> cThemeData = computed(() {
  return sIsDark.value
      ? FlexThemeData.dark(
          scheme: cFlexScheme.value,
          swapLegacyOnMaterial3: true,
          bottomAppBarElevation: 0.5,
          subThemesData: const FlexSubThemesData(
            interactionEffects: true,
            tintedDisabledControls: true,
            blendOnLevel: 20,
            blendOnColors: true,
            adaptiveSplash: FlexAdaptive.all(),
            adaptiveElevationShadowsBack: FlexAdaptive.all(),
            adaptiveAppBarScrollUnderOff: FlexAdaptive.all(),
            defaultRadius: 6,
            elevatedButtonSchemeColor: SchemeColor.onPrimaryContainer,
            elevatedButtonSecondarySchemeColor: SchemeColor.primaryContainer,
            outlinedButtonSchemeColor: SchemeColor.onSurface,
            outlinedButtonOutlineSchemeColor: SchemeColor.outlineVariant,
            toggleButtonsBorderSchemeColor: SchemeColor.outlineVariant,
            segmentedButtonSchemeColor: SchemeColor.primary,
            segmentedButtonBorderSchemeColor: SchemeColor.outlineVariant,
            switchThumbSchemeColor: SchemeColor.onPrimaryContainer,
            switchAdaptiveCupertinoLike: FlexAdaptive.all(),
            unselectedToggleIsColored: true,
            sliderValueTinted: true,
            sliderTrackHeight: 8,
            inputDecoratorIsDense: true,
            inputDecoratorContentPadding:
                EdgeInsetsDirectional.fromSTEB(12, 12, 12, 12),
            inputDecoratorBorderSchemeColor: SchemeColor.primary,
            inputDecoratorBorderType: FlexInputBorderType.outline,
            inputDecoratorRadius: 8,
            inputDecoratorBorderWidth: 0.5,
            inputDecoratorFocusedBorderWidth: 2,
            fabUseShape: true,
            fabAlwaysCircular: true,
            chipSchemeColor: SchemeColor.secondaryContainer,
            chipSelectedSchemeColor: SchemeColor.primaryContainer,
            chipFontSize: 12,
            chipIconSize: 16,
            chipPadding: EdgeInsetsDirectional.fromSTEB(4, 4, 4, 4),
            cardRadius: 12,
            popupMenuRadius: 6,
            popupMenuElevation: 4,
            alignedDropdown: true,
            tooltipRadius: 6,
            tooltipSchemeColor: SchemeColor.surfaceContainerHigh,
            tooltipOpacity: 0.96,
            dialogBackgroundSchemeColor: SchemeColor.surfaceContainerHigh,
            dialogRadius: 12,
            snackBarRadius: 6,
            snackBarElevation: 6,
            snackBarBackgroundSchemeColor: SchemeColor.surfaceContainerLow,
            appBarBackgroundSchemeColor: SchemeColor.surfaceContainerLowest,
            appBarScrolledUnderElevation: 2.5,
            bottomAppBarHeight: 60,
            tabBarIndicatorWeight: 4,
            tabBarIndicatorTopRadius: 4,
            tabBarDividerColor: Color(0x00000000),
            drawerRadius: 0,
            drawerElevation: 2,
            drawerIndicatorOpacity: 0.5,
            bottomSheetBackgroundColor: SchemeColor.surfaceContainerHigh,
            bottomSheetModalBackgroundColor: SchemeColor.surfaceContainer,
            bottomSheetRadius: 12,
            bottomSheetElevation: 4,
            bottomSheetModalElevation: 6,
            bottomNavigationBarSelectedLabelSchemeColor: SchemeColor.primary,
            bottomNavigationBarMutedUnselectedLabel: true,
            bottomNavigationBarSelectedIconSchemeColor: SchemeColor.primary,
            bottomNavigationBarMutedUnselectedIcon: true,
            bottomNavigationBarBackgroundSchemeColor:
                SchemeColor.surfaceContainer,
            bottomNavigationBarElevation: 0,
            menuRadius: 6,
            menuElevation: 4,
            menuSchemeColor: SchemeColor.surfaceContainerLowest,
            menuPadding: EdgeInsetsDirectional.fromSTEB(6, 10, 5, 10),
            menuBarRadius: 0,
            menuBarElevation: 0,
            menuBarShadowColor: Color(0x00000000),
            menuIndicatorBackgroundSchemeColor:
                SchemeColor.surfaceContainerHigh,
            menuIndicatorRadius: 6,
            searchBarElevation: 0,
            searchViewElevation: 0,
            navigationBarIndicatorSchemeColor: SchemeColor.secondaryContainer,
            navigationBarBackgroundSchemeColor: SchemeColor.surfaceContainer,
            navigationBarElevation: 0,
            navigationBarHeight: 72,
            navigationRailUseIndicator: true,
            navigationRailIndicatorSchemeColor: SchemeColor.secondaryContainer,
            navigationRailIndicatorOpacity: 1,
            navigationRailBackgroundSchemeColor: SchemeColor.surfaceContainer,
          ),
          keyColors: const FlexKeyColors(
            useSecondary: true,
            useTertiary: true,
            useError: true,
            keepPrimary: true,
            keepSecondary: true,
            keepError: true,
            keepTertiaryContainer: true,
          ),
          tones: FlexSchemeVariant.chroma
              .tones(Brightness.dark)
              .higherContrastFixed()
              .monochromeSurfaces(),
          visualDensity: VisualDensity.compact,
          materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,
          cupertinoOverrideTheme:
              const CupertinoThemeData(applyThemeToAll: true),
          fontFamily: GoogleFonts.bebasNeue().fontFamily,
        )
      : FlexThemeData.light(
          scheme: cFlexScheme.value,
          swapLegacyOnMaterial3: true,
          lightIsWhite: true,
          bottomAppBarElevation: 0.5,
          subThemesData: const FlexSubThemesData(
            interactionEffects: true,
            tintedDisabledControls: true,
            blendOnLevel: 10,
            adaptiveSplash: FlexAdaptive.all(),
            adaptiveElevationShadowsBack: FlexAdaptive.all(),
            adaptiveAppBarScrollUnderOff: FlexAdaptive.all(),
            defaultRadius: 6,
            elevatedButtonSchemeColor: SchemeColor.onPrimaryContainer,
            elevatedButtonSecondarySchemeColor: SchemeColor.primaryContainer,
            outlinedButtonSchemeColor: SchemeColor.onSurface,
            outlinedButtonOutlineSchemeColor: SchemeColor.outlineVariant,
            toggleButtonsBorderSchemeColor: SchemeColor.outlineVariant,
            segmentedButtonSchemeColor: SchemeColor.primary,
            segmentedButtonBorderSchemeColor: SchemeColor.outlineVariant,
            switchThumbSchemeColor: SchemeColor.onPrimaryContainer,
            switchAdaptiveCupertinoLike: FlexAdaptive.all(),
            unselectedToggleIsColored: true,
            sliderValueTinted: true,
            sliderTrackHeight: 8,
            inputDecoratorIsDense: true,
            inputDecoratorContentPadding:
                EdgeInsetsDirectional.fromSTEB(12, 12, 12, 12),
            inputDecoratorBorderSchemeColor: SchemeColor.primary,
            inputDecoratorBorderType: FlexInputBorderType.outline,
            inputDecoratorRadius: 8,
            inputDecoratorBorderWidth: 0.5,
            inputDecoratorFocusedBorderWidth: 2,
            fabUseShape: true,
            fabAlwaysCircular: true,
            chipSchemeColor: SchemeColor.secondaryContainer,
            chipSelectedSchemeColor: SchemeColor.primaryContainer,
            chipFontSize: 12,
            chipIconSize: 16,
            chipPadding: EdgeInsetsDirectional.fromSTEB(4, 4, 4, 4),
            cardRadius: 12,
            popupMenuRadius: 6,
            popupMenuElevation: 4,
            alignedDropdown: true,
            tooltipRadius: 6,
            tooltipSchemeColor: SchemeColor.surfaceContainerHigh,
            tooltipOpacity: 0.96,
            dialogBackgroundSchemeColor: SchemeColor.surfaceContainerHigh,
            dialogRadius: 12,
            snackBarRadius: 6,
            snackBarElevation: 6,
            snackBarBackgroundSchemeColor: SchemeColor.surfaceContainerLow,
            appBarBackgroundSchemeColor: SchemeColor.surfaceContainerLowest,
            appBarScrolledUnderElevation: 0.5,
            bottomAppBarHeight: 60,
            tabBarIndicatorWeight: 4,
            tabBarIndicatorTopRadius: 4,
            tabBarDividerColor: Color(0x00000000),
            drawerRadius: 0,
            drawerElevation: 2,
            drawerIndicatorOpacity: 0.5,
            bottomSheetBackgroundColor: SchemeColor.surfaceContainerHigh,
            bottomSheetModalBackgroundColor: SchemeColor.surfaceContainer,
            bottomSheetRadius: 12,
            bottomSheetElevation: 4,
            bottomSheetModalElevation: 6,
            bottomNavigationBarSelectedLabelSchemeColor: SchemeColor.primary,
            bottomNavigationBarMutedUnselectedLabel: true,
            bottomNavigationBarSelectedIconSchemeColor: SchemeColor.primary,
            bottomNavigationBarMutedUnselectedIcon: true,
            bottomNavigationBarBackgroundSchemeColor:
                SchemeColor.surfaceContainer,
            bottomNavigationBarElevation: 0,
            menuRadius: 6,
            menuElevation: 4,
            menuSchemeColor: SchemeColor.surfaceContainerLowest,
            menuPadding: EdgeInsetsDirectional.fromSTEB(6, 10, 5, 10),
            menuBarRadius: 0,
            menuBarElevation: 0,
            menuBarShadowColor: Color(0x00000000),
            menuIndicatorBackgroundSchemeColor:
                SchemeColor.surfaceContainerHigh,
            menuIndicatorRadius: 6,
            searchBarElevation: 0,
            searchViewElevation: 0,
            navigationBarIndicatorSchemeColor: SchemeColor.secondaryContainer,
            navigationBarBackgroundSchemeColor: SchemeColor.surfaceContainer,
            navigationBarElevation: 0,
            navigationBarHeight: 72,
            navigationRailUseIndicator: true,
            navigationRailIndicatorSchemeColor: SchemeColor.secondaryContainer,
            navigationRailIndicatorOpacity: 1,
            navigationRailBackgroundSchemeColor: SchemeColor.surfaceContainer,
          ),
          keyColors: const FlexKeyColors(
            useSecondary: true,
            useTertiary: true,
            useError: true,
            keepPrimary: true,
            keepSecondary: true,
            keepError: true,
            keepTertiaryContainer: true,
          ),
          tones: FlexSchemeVariant.chroma
              .tones(Brightness.light)
              .higherContrastFixed()
              .monochromeSurfaces(),
          visualDensity: VisualDensity.compact,
          materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,
          cupertinoOverrideTheme:
              const CupertinoThemeData(applyThemeToAll: true),
          fontFamily: GoogleFonts.bebasNeue().fontFamily,
        );
});

Computed<ColorScheme> cFlexSchemeLight = computed(() {
  if (sIsGreen.value) {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF264E36),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFA5D1B1),
      onPrimaryContainer: Color(0xFF001207),
      primaryFixed: Color(0xFFC6F3D2),
      primaryFixedDim: Color(0xFFB0DCBC),
      onPrimaryFixed: Color(0xFF00180A),
      onPrimaryFixedVariant: Color(0xFF002613),
      secondary: Color(0xFF555729),
      onSecondary: Color(0xFFFFFFFF),
      secondaryContainer: Color(0xFFEBECB0),
      onSecondaryContainer: Color(0xFF1C1D00),
      secondaryFixed: Color(0xFFEBECB0),
      secondaryFixedDim: Color(0xFFD4D59B),
      onSecondaryFixed: Color(0xFF131500),
      onSecondaryFixedVariant: Color(0xFF202100),
      tertiary: Color(0xFF797B3A),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFBFC0A0),
      onTertiaryContainer: Color(0xFF11110E),
      tertiaryFixed: Color(0xFFEBED9F),
      tertiaryFixedDim: Color(0xFFD4D68B),
      onTertiaryFixed: Color(0xFF141500),
      onTertiaryFixedVariant: Color(0xFF202100),
      error: Color(0xFF790000),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFFDAD4),
      onErrorContainer: Color(0xFF410000),
      surface: Color(0xFFFFFFFF),
      onSurface: Color(0xFF0E0E0E),
      surfaceDim: Color(0xFFE7E7E7),
      surfaceBright: Color(0xFFFFFFFF),
      surfaceContainerLowest: Color(0xFFFFFFFF),
      surfaceContainerLow: Color(0xFFFFFFFF),
      surfaceContainer: Color(0xFFFBFBFB),
      surfaceContainerHigh: Color(0xFFF5F5F5),
      surfaceContainerHighest: Color(0xFFEFEFEF),
      onSurfaceVariant: Color(0xFF1B1B1B),
      outline: Color(0xFF474747),
      outlineVariant: Color(0xFFABABAB),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFF232323),
      onInverseSurface: Color(0xFFF9F9F9),
      inversePrimary: Color(0xFFC0EDCC),
      surfaceTint: Color(0xFF3F674D),
    );
  } else {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xFF452F2B),
      onPrimary: Color(0xFFFFFFFF),
      primaryContainer: Color(0xFFE1BFB9),
      onPrimaryContainer: Color(0xFF1A0A07),
      primaryFixed: Color(0xFFFFE2DC),
      primaryFixedDim: Color(0xFFECCAC4),
      onPrimaryFixed: Color(0xFF200F0C),
      onPrimaryFixedVariant: Color(0xFF2E1B17),
      secondary: Color(0xFFF5E9C9),
      onSecondary: Color(0xFF000000),
      secondaryContainer: Color(0xFFF3E7C8),
      onSecondaryContainer: Color(0xFF211B08),
      secondaryFixed: Color(0xFFF3E7C8),
      secondaryFixedDim: Color(0xFFDCD1B2),
      onSecondaryFixed: Color(0xFF181303),
      onSecondaryFixedVariant: Color(0xFF251F0B),
      tertiary: Color(0xFF947224),
      onTertiary: Color(0xFFFFFFFF),
      tertiaryContainer: Color(0xFFFFDE9C),
      onTertiaryContainer: Color(0xFF14130E),
      tertiaryFixed: Color(0xFFFFE5B7),
      tertiaryFixedDim: Color(0xFFF7CC74),
      onTertiaryFixed: Color(0xFF1C1200),
      onTertiaryFixedVariant: Color(0xFF2B1D00),
      error: Color(0xFFB00020),
      onError: Color(0xFFFFFFFF),
      errorContainer: Color(0xFFFFDAD8),
      onErrorContainer: Color(0xFF410006),
      surface: Color(0xFFFFFFFF),
      onSurface: Color(0xFF0E0E0E),
      surfaceDim: Color(0xFFE7E7E7),
      surfaceBright: Color(0xFFFFFFFF),
      surfaceContainerLowest: Color(0xFFFFFFFF),
      surfaceContainerLow: Color(0xFFFFFFFF),
      surfaceContainer: Color(0xFFFBFBFB),
      surfaceContainerHigh: Color(0xFFF5F5F5),
      surfaceContainerHighest: Color(0xFFEFEFEF),
      onSurfaceVariant: Color(0xFF1B1B1B),
      outline: Color(0xFF474747),
      outlineVariant: Color(0xFFABABAB),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFF232323),
      onInverseSurface: Color(0xFFF9F9F9),
      inversePrimary: Color(0xFFFEDBD4),
      surfaceTint: Color(0xFF725853),
    );
  }
});

Computed<ColorScheme> cFlexSchemeDark = computed(() {
  if (sIsGreen.value) {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFF7AB893),
      onPrimary: Color(0xFF0E1210),
      primaryContainer: Color(0xFF3F674D),
      onPrimaryContainer: Color(0xFFDDFFE4),
      primaryFixed: Color(0xFFC6F3D2),
      primaryFixedDim: Color(0xFFB0DCBC),
      onPrimaryFixed: Color(0xFF00180A),
      onPrimaryFixedVariant: Color(0xFF002613),
      secondary: Color(0xFFBBBE74),
      onSecondary: Color(0xFF13130D),
      secondaryContainer: Color(0xFF787A48),
      onSecondaryContainer: Color(0xFFF6F7BB),
      secondaryFixed: Color(0xFFEBECB0),
      secondaryFixedDim: Color(0xFFD4D59B),
      onSecondaryFixed: Color(0xFF131500),
      onSecondaryFixedVariant: Color(0xFF202100),
      tertiary: Color(0xFFDDDF93),
      onTertiary: Color(0xFF111200),
      tertiaryContainer: Color(0xFF515402),
      onTertiaryContainer: Color(0xFFECEDE0),
      tertiaryFixed: Color(0xFFEBED9F),
      tertiaryFixedDim: Color(0xFFD4D68B),
      onTertiaryFixed: Color(0xFF141500),
      onTertiaryFixedVariant: Color(0xFF202100),
      error: Color(0xFFCF6679),
      onError: Color(0xFF140C0D),
      errorContainer: Color(0xFF7E273B),
      onErrorContainer: Color(0xFFFFECED),
      surface: Color(0xFF0E0E0E),
      onSurface: Color(0xFFF1F1F1),
      surfaceDim: Color(0xFF131313),
      surfaceBright: Color(0xFF393939),
      surfaceContainerLowest: Color(0xFF070707),
      surfaceContainerLow: Color(0xFF131313),
      surfaceContainer: Color(0xFF1F1F1F),
      surfaceContainerHigh: Color(0xFF2A2A2A),
      surfaceContainerHighest: Color(0xFF353535),
      onSurfaceVariant: Color(0xFFE2E2E2),
      outline: Color(0xFF919191),
      outlineVariant: Color(0xFF5E5E5E),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFFE2E2E2),
      onInverseSurface: Color(0xFF1B1B1B),
      inversePrimary: Color(0xFF3F674D),
      surfaceTint: Color(0xFFA5D1B1),
    );
  } else {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xFF8D7F7D),
      onPrimary: Color(0xFFFAF9F9),
      primaryContainer: Color(0xFF725853),
      onPrimaryContainer: Color(0xFFFFF4F2),
      primaryFixed: Color(0xFFFFE2DC),
      primaryFixedDim: Color(0xFFECCAC4),
      onPrimaryFixed: Color(0xFF200F0C),
      onPrimaryFixedVariant: Color(0xFF2E1B17),
      secondary: Color(0xFFF8ECD4),
      onSecondary: Color(0xFF141414),
      secondaryContainer: Color(0xFF7F775C),
      onSecondaryContainer: Color(0xFFFFF3D3),
      secondaryFixed: Color(0xFFF3E7C8),
      secondaryFixedDim: Color(0xFFDCD1B2),
      onSecondaryFixed: Color(0xFF181303),
      onSecondaryFixedVariant: Color(0xFF251F0B),
      tertiary: Color(0xFFFFD480),
      onTertiary: Color(0xFF190F00),
      tertiaryContainer: Color(0xFF8E774F),
      onTertiaryContainer: Color(0xFFF6F2EC),
      tertiaryFixed: Color(0xFFFFE5B7),
      tertiaryFixedDim: Color(0xFFF7CC74),
      onTertiaryFixed: Color(0xFF1C1200),
      onTertiaryFixedVariant: Color(0xFF2B1D00),
      error: Color(0xFFCF6679),
      onError: Color(0xFF140C0D),
      errorContainer: Color(0xFF7E273B),
      onErrorContainer: Color(0xFFFFECED),
      surface: Color(0xFF0E0E0E),
      onSurface: Color(0xFFF1F1F1),
      surfaceDim: Color(0xFF131313),
      surfaceBright: Color(0xFF393939),
      surfaceContainerLowest: Color(0xFF070707),
      surfaceContainerLow: Color(0xFF131313),
      surfaceContainer: Color(0xFF1F1F1F),
      surfaceContainerHigh: Color(0xFF2A2A2A),
      surfaceContainerHighest: Color(0xFF353535),
      onSurfaceVariant: Color(0xFFE2E2E2),
      outline: Color(0xFF919191),
      outlineVariant: Color(0xFF5E5E5E),
      shadow: Color(0xFF000000),
      scrim: Color(0xFF000000),
      inverseSurface: Color(0xFFE2E2E2),
      onInverseSurface: Color(0xFF1B1B1B),
      inversePrimary: Color(0xFF725853),
      surfaceTint: Color(0xFFE1BFB9),
    );
  }
});
